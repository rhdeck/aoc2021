const data6 = `5,1,4,1,5,1,1,5,4,4,4,4,5,1,2,2,1,3,4,1,1,5,1,5,2,2,2,2,1,4,2,4,3,3,3,3,1,1,1,4,3,4,3,1,2,1,5,1,1,4,3,3,1,5,3,4,1,1,3,5,2,4,1,5,3,3,5,4,2,2,3,2,1,1,4,1,2,4,4,2,1,4,3,3,4,4,5,3,4,5,1,1,3,2,5,1,5,1,1,5,2,1,1,4,3,2,5,2,1,1,4,1,5,5,3,4,1,5,4,5,3,1,1,1,4,5,3,1,1,1,5,3,3,5,1,4,1,1,3,2,4,1,3,1,4,5,5,1,4,4,4,2,2,5,5,5,5,5,1,2,3,1,1,2,2,2,2,4,4,1,5,4,5,2,1,2,5,4,4,3,2,1,5,1,4,5,1,4,3,4,1,3,1,5,5,3,1,1,5,1,1,1,2,1,2,2,1,4,3,2,4,4,4,3,1,1,1,5,5,5,3,2,5,2,1,1,5,4,1,2,1,1,1,1,1,2,1,1,4,2,1,3,4,2,3,1,2,2,3,3,4,3,5,4,1,3,1,1,1,2,5,2,4,5,2,3,3,2,1,2,1,1,2,5,3,1,5,2,2,5,1,3,3,2,5,1,3,1,1,3,1,1,2,2,2,3,1,1,4,2`;
const _fish = data6.split(",").map(Number);
let fish = [..._fish];
const tickFish = (fish: number) => {
  if (fish === 0) {
    return [6, 8];
  }
  return [fish - 1];
};
for (let i = 0; i < 80; i++) {
  fish = fish.flatMap(tickFish);
}
console.log("Part 1 answer:", fish.length);

let fishesByAge = _fish.reduce((acc, fish) => {
  acc[fish]++;
  return acc;
}, Array<number>(9).fill(0));
for (let i = 0; i < 256; i++) {
  const old = [...fishesByAge];
  const out = old.map((fish, i, arr) => arr[i < 8 ? i + 1 : 0]);
  out[6] += old[0];
  fishesByAge = out;
}
console.log(
  "Part 2 answer:",
  fishesByAge.reduce((a, l) => a + l, 0)
);
